// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  createdAt   DateTime      @default(now())
  sessions    Sessions[]
  credentials Credentials[]
  Notes       Notes[]
  Cards       Cards[]
  Wifis Wifis[]

  @@map("users")
}

model Sessions {
  id        Int      @id @default(autoincrement())
  user      Users    @relation(fields: [userId], references: [id])
  userId    Int
  token     String
  createdAt DateTime @default(now())

  @@map("sessions")
}

model Credentials {
  id        Int      @id @default(autoincrement())
  username  String
  password  String
  title     String
  url       String
  user      Users    @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())

  @@unique([title, userId])
  @@map("credentials")
}

model Notes {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  user      Users    @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())

  @@unique([title, userId])
  @@map("notes")
}

enum CardType {
  credit
  debit
  creditAndDebit
}

model Cards {
  id         Int      @id @default(autoincrement())
  title      String
  number     String
  name       String
  expireDate String
  cvv        String
  type       CardType
  user       Users    @relation(fields: [userId], references: [id])
  userId     Int
  password   String
  createdAt  DateTime @default(now())

  @@unique([title, userId])
  @@map("cards")
}

model Wifis {
  id        Int      @id @default(autoincrement())
  title     String
  ssid      String
  password  String
  user      Users    @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())

  @@map("wifis")
}
